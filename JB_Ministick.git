


#include <Adafruit_NeoPixel.h>

#define PIN 11
Adafruit_NeoPixel strip = Adafruit_NeoPixel(37, PIN, NEO_GRB + NEO_KHZ800);

int select = A1;
int potval = 0;
int show = 1;
void setup() {
  strip.begin();
  strip.show();
  pinMode(2, INPUT_PULLUP);
  Serial.begin(9600);
}

void loop() {
  potval = analogRead(select);
  show = map(potval, 0, 1023, 1, 16);
  Serial.print("Pot Val = ");
  Serial.println(potval);
  Serial.print("Show = ");
  Serial.println(show);
  if (show == 1) {
    Police();
  }
  if (show == 2) {
    Pulse();
  }
  if (show == 3) {
    on(strip.Color(255, 255, 255));
  }
  if (show == 4) {
    on(strip.Color(255, 0, 0));
  }
  if (show == 5) {
    on(strip.Color(0, 255, 0));
  }
  if (show == 6) {
    on(strip.Color(0, 0, 255));
  }
  if (show == 7) {
    Lenser(25);
  }

  if (show == 8) {
    on(strip.Color(255, 255, 0));
  }
  if (show == 9) {
    on(strip.Color(255, 0, 255));
  }
  if (show == 10) {
    on(strip.Color(0, 255, 255));
  }
  if (show == 11) {
    on(strip.Color(255, 128, 0));
  }
  if (show == 12) {
    on(strip.Color(17, 85, 0));
  }
  if (show == 13) {
    on(strip.Color(24, 92, 132));
  }
  if (show == 14) {
    rainbow(20);
  }

  if (show == 15) {
    theaterChaseRainbow(100);
  }
  if (show == 16) {
    rainbowCycle(10);
  }

  // colorWipe(strip.Color(255, 0, 0), 50); // Red
  // colorWipe(strip.Color(0, 255, 0), 50); // Green
  // colorWipe(strip.Color(0, 0, 255), 50); // Blue
  // Send a theater pixel chase in...
  // theaterChase(strip.Color(127, 127, 127), 50); // White
  // theaterChase(strip.Color(127,   0,   0), 50); // Red
  // theaterChase(strip.Color(  0,   0, 127), 50); // Blue
  // ledChase(strip.Color(  0,   0, 127), 500); // Blue
  // rainbow(20);
  // rainbowCycle(200);
  // Police();
  // Pulse();
  // theaterChaseRainbow(50);
}


void Lenser(uint8_t wait) {
  uint16_t i, j;

  for (j = 0; j < 256; j++) {
    for (i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, Wheel((j) & 255));
    }
    strip.show();
    while (digitalRead(2) == LOW) {
    }
    delay(wait);
  }
}

// Fill the dots one after the other with a color
void colorWipe(uint32_t c, uint8_t wait) {
  for (uint16_t i = 0; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, c);
    strip.show();
    delay(wait);
  }
}
void on(uint32_t c) {
  for (int i = 0; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, c);
  }
  strip.show();
  delay (5);
}
void Pulse() {

  for (int p = 0; p < 255; p++) {
    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, 0, 0, p);
    }
    strip.show();
  }
  for (int p = 255; p > 0; p--) {
    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, 0, 0, p);
    }
    strip.show();
  }
}

void Police() {

  for (int i = 0; i < strip.numPixels() / 2; i++) {
    strip.setPixelColor(i, 0, 0, 127); // Set half pixels to blue
  }
  strip.show();
  delay (40);
  for (int i = 0; i < strip.numPixels() / 2; i++) {
    strip.setPixelColor(i, 0, 0, 0); // Turn the pixels off with null colour
  }
  strip.show();
  delay (40);
  for (int i = 0; i < strip.numPixels() / 2; i++) {
    strip.setPixelColor(i, 0, 0, 127); // Set half pixels to blue
  }
  strip.show();
  delay (40);
  for (int i = 0; i < strip.numPixels() / 2; i++) {
    strip.setPixelColor(i, 0, 0, 0); // Turn the pixels off with null colour
  }
  strip.show();
  delay(400);

  // Now for the red lights on the other half of the strip

  for (int i = strip.numPixels() / 2; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, 0, 0, 127); // Set half pixels to blue
  }
  strip.show();
  delay (40);
  for (int i = strip.numPixels() / 2; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, 0, 0, 0); // Turn the pixels off with null colour
  }
  strip.show();
  delay (40);
  for (int i = strip.numPixels() / 2; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, 0, 0, 127); // Set half pixels to blue
  }
  strip.show();
  delay (40);
  for (int i = strip.numPixels() / 2; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, 0, 0, 0); // Turn the pixels off with null colour
  }
  strip.show();
  delay(400);


}

void rainbow(uint8_t wait) {
  uint16_t i, j;

  for (j = 0; j < 256; j++) {
    for (i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, Wheel((i + j) & 255));
    }
    strip.show();
    while (digitalRead(2) == LOW) {
    }
    delay(wait);
  }
}

void ledChase(uint32_t c, uint8_t wait) {
  for (int j = 0; j < 4; j++) { //do 10 cycles of chasing
    for (int q = 0; q < 3; q++) {
      for (int i = 0; i < strip.numPixels(); i = i + 3) {
        strip.setPixelColor(i + q, c);  //turn every third pixel on
      }
      strip.show();

      delay(wait);

      for (int i = 0; i < strip.numPixels(); i = i + 3) {
        strip.setPixelColor(i + q, 0);      //turn every third pixel off
      }
    }
  }
}


// Slightly different, this makes the rainbow equally distributed throughout
void rainbowCycle(uint8_t wait) {
  uint16_t i, j;

  for (j = 0; j < 256 * 5; j++) { // 5 cycles of all colors on wheel
    for (i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, Wheel(((i * 256 / strip.numPixels()) + j) & 255));
    }
    strip.show();
    while (digitalRead(2) == LOW) {
    }
    delay(wait);
  }
}

//Theatre-style crawling lights.
void theaterChase(uint32_t c, uint8_t wait) {
  for (int j = 0; j < 10; j++) { //do 10 cycles of chasing
    for (int q = 0; q < 3; q++) {
      for (int i = 0; i < strip.numPixels(); i = i + 3) {
        strip.setPixelColor(i + q, c);  //turn every third pixel on
      }
      strip.show();
      while (digitalRead(2) == LOW) {
    }

      delay(wait);

      for (int i = 0; i < strip.numPixels(); i = i + 3) {
        strip.setPixelColor(i + q, 0);      //turn every third pixel off
      }
    }
  }
}

//Theatre-style crawling lights with rainbow effect
void theaterChaseRainbow(uint8_t wait) {
  for (int j = 0; j < 256; j++) {   // cycle all 256 colors in the wheel
    for (int q = 0; q < 3; q++) {
      for (int i = 0; i < strip.numPixels(); i = i + 3) {
        strip.setPixelColor(i + q, Wheel( (i + j) % 255)); //turn every third pixel on
      }
      strip.show();

      delay(wait);

      for (int i = 0; i < strip.numPixels(); i = i + 3) {
        strip.setPixelColor(i + q, 0);      //turn every third pixel off
      }
    }
  }
}

// Input a value 0 to 255 to get a color value.
// The colours are a transition r - g - b - back to r.
uint32_t Wheel(byte WheelPos) {
  if (WheelPos < 85) {
    return strip.Color(WheelPos * 3, 255 - WheelPos * 3, 0);
  } else if (WheelPos < 170) {
    WheelPos -= 85;
    return strip.Color(255 - WheelPos * 3, 0, WheelPos * 3);
  } else {
    WheelPos -= 170;
    return strip.Color(0, WheelPos * 3, 255 - WheelPos * 3);
  }
}

